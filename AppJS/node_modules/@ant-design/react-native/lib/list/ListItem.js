"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Brief = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _icon = _interopRequireDefault(require("../icon"));

var _style = require("../style");

var _index = _interopRequireDefault(require("./style/index"));

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var Brief = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(Brief, _React$Component);

  var _super = (0, _createSuper2["default"])(Brief);

  function Brief() {
    (0, _classCallCheck2["default"])(this, Brief);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(Brief, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          style = _this$props.style,
          wrap = _this$props.wrap;
      var numberOfLines = {};

      if (wrap === false) {
        numberOfLines = {
          numberOfLines: 1
        };
      }

      return /*#__PURE__*/_react["default"].createElement(_style.WithTheme, {
        styles: this.props.styles,
        themeStyles: _index["default"]
      }, function (styles) {
        return /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
          style: [styles.Brief]
        }, /*#__PURE__*/_react["default"].createElement(_reactNative.Text, (0, _extends2["default"])({
          style: [styles.BriefText, style]
        }, numberOfLines), children));
      });
    }
  }]);
  return Brief;
}(_react["default"].Component);

exports.Brief = Brief;

var Item = /*#__PURE__*/function (_React$Component2) {
  (0, _inherits2["default"])(Item, _React$Component2);

  var _super2 = (0, _createSuper2["default"])(Item);

  function Item() {
    (0, _classCallCheck2["default"])(this, Item);
    return _super2.apply(this, arguments);
  }

  (0, _createClass2["default"])(Item, [{
    key: "render",
    value: function render() {
      var _this = this;

      var _a = this.props,
          styles = _a.styles,
          children = _a.children,
          multipleLine = _a.multipleLine,
          thumb = _a.thumb,
          extra = _a.extra,
          arrow = _a.arrow,
          style = _a.style,
          onPress = _a.onPress,
          onPressIn = _a.onPressIn,
          onPressOut = _a.onPressOut,
          onLongPress = _a.onLongPress,
          delayLongPress = _a.delayLongPress,
          wrap = _a.wrap,
          disabled = _a.disabled,
          align = _a.align,
          restProps = __rest(_a, ["styles", "children", "multipleLine", "thumb", "extra", "arrow", "style", "onPress", "onPressIn", "onPressOut", "onLongPress", "delayLongPress", "wrap", "disabled", "align"]);

      return /*#__PURE__*/_react["default"].createElement(_style.WithTheme, {
        styles: styles,
        themeStyles: _index["default"]
      }, function (itemStyles) {
        var numberOfLines = {};

        if (wrap === false) {
          numberOfLines = {
            numberOfLines: 1
          };
        }

        var underlayColor = {};

        if (!disabled && onPress) {
          underlayColor = {
            underlayColor: _reactNative.StyleSheet.flatten(itemStyles.underlayColor).backgroundColor,
            activeOpacity: 0.5
          };
        } else {
          underlayColor = {
            activeOpacity: 1
          };
        }

        var alignStyle = {};

        if (align === 'top') {
          alignStyle = {
            alignItems: 'flex-start'
          };
        } else if (align === 'bottom') {
          alignStyle = {
            alignItems: 'flex-end'
          };
        }

        var contentDom;

        if (Array.isArray(children)) {
          var tempContentDom = [];
          children.forEach(function (el, index) {
            if ( /*#__PURE__*/_react["default"].isValidElement(el)) {
              tempContentDom.push(el);
            } else {
              tempContentDom.push( /*#__PURE__*/_react["default"].createElement(_reactNative.Text, (0, _extends2["default"])({
                style: [itemStyles.Content]
              }, numberOfLines, {
                key: "".concat(index, "-children")
              }), el));
            }
          });
          contentDom = /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
            style: [itemStyles.column]
          }, tempContentDom);
        } else {
          if (children && /*#__PURE__*/_react["default"].isValidElement(children)) {
            contentDom = /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
              style: [itemStyles.column]
            }, children);
          } else {
            contentDom = /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
              style: [itemStyles.column]
            }, /*#__PURE__*/_react["default"].createElement(_reactNative.Text, (0, _extends2["default"])({
              style: [itemStyles.Content]
            }, numberOfLines), children));
          }
        }

        var extraDom;

        if (extra) {
          extraDom = /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
            style: [itemStyles.column]
          }, /*#__PURE__*/_react["default"].createElement(_reactNative.Text, (0, _extends2["default"])({
            style: [itemStyles.Extra]
          }, numberOfLines), extra));

          if ( /*#__PURE__*/_react["default"].isValidElement(extra)) {
            var extraChildren = extra.props.children;

            if (Array.isArray(extraChildren)) {
              var tempExtraDom = [];
              extraChildren.forEach(function (el, index) {
                if (typeof el === 'string') {
                  tempExtraDom.push( /*#__PURE__*/_react["default"].createElement(_reactNative.Text, (0, _extends2["default"])({}, numberOfLines, {
                    style: [itemStyles.Extra],
                    key: "".concat(index, "-children")
                  }), el));
                } else {
                  tempExtraDom.push(el);
                }
              });
              extraDom = /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
                style: [itemStyles.column]
              }, tempExtraDom);
            } else {
              extraDom = extra;
            }
          }
        }

        var arrEnum = {
          horizontal: /*#__PURE__*/_react["default"].createElement(_icon["default"], {
            name: "right",
            style: itemStyles.Arrow
          }),
          down: /*#__PURE__*/_react["default"].createElement(_icon["default"], {
            name: "down",
            style: itemStyles.ArrowV
          }),
          up: /*#__PURE__*/_react["default"].createElement(_icon["default"], {
            name: "up",
            style: itemStyles.ArrowV
          })
        };

        var itemView = /*#__PURE__*/_react["default"].createElement(_reactNative.View, (0, _extends2["default"])({}, restProps, {
          style: [itemStyles.Item, style]
        }), typeof thumb === 'string' ? /*#__PURE__*/_react["default"].createElement(_reactNative.Image, {
          source: {
            uri: thumb
          },
          style: [itemStyles.Thumb, multipleLine && itemStyles.multipleThumb]
        }) : thumb, /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
          style: [itemStyles.Line, multipleLine && itemStyles.multipleLine, multipleLine && alignStyle]
        }, contentDom, extraDom, arrow ? arrEnum[arrow] || /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
          style: itemStyles.Arrow
        }) : null));

        return /*#__PURE__*/_react["default"].createElement(_reactNative.TouchableHighlight, (0, _extends2["default"])({}, underlayColor, {
          // TODO: fix onClick
          onPress: _this.props.onClick ? _this.props.onClick : onPress || undefined,
          onPressIn: onPressIn,
          onPressOut: onPressOut,
          onLongPress: onLongPress,
          delayLongPress: delayLongPress
        }), itemView);
      });
    }
  }]);
  return Item;
}(_react["default"].Component);

exports["default"] = Item;
Item.defaultProps = {
  multipleLine: false,
  wrap: false,
  delayLongPress: 500,
  onLongPress: function onLongPress() {}
};
Item.Brief = Brief;