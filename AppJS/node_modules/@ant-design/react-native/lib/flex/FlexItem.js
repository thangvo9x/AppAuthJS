"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var FlexItem = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(FlexItem, _React$Component);

  var _super = (0, _createSuper2["default"])(FlexItem);

  function FlexItem() {
    (0, _classCallCheck2["default"])(this, FlexItem);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(FlexItem, [{
    key: "render",
    value: function render() {
      var _a = this.props,
          style = _a.style,
          children = _a.children,
          flex = _a.flex,
          restProps = __rest(_a, ["style", "children", "flex"]);

      var flexItemStyle = {
        flex: flex || 1
      }; // support other touchablewithoutfeedback props
      // TODO  support TouchableHighlight

      var inner = /*#__PURE__*/_react["default"].createElement(_reactNative.View, (0, _extends2["default"])({
        style: [flexItemStyle, style]
      }, restProps), children);

      var shouldWrapInTouchableComponent = restProps.onPress || restProps.onLongPress || restProps.onPressIn || restProps.onPressOut;

      if (shouldWrapInTouchableComponent) {
        return /*#__PURE__*/_react["default"].createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2["default"])({}, restProps), inner);
      } else {
        return inner;
      }
    }
  }]);
  return FlexItem;
}(_react["default"].Component);

exports["default"] = FlexItem;
FlexItem.defaultProps = {
  flex: 1
};