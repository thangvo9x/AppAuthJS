"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var Input = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(Input, _React$Component);

  var _super = (0, _createSuper2["default"])(Input);

  function Input(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Input);
    _this = _super.call(this, props);

    _this.focus = function () {
      if (_this.inputRef) {
        _this.inputRef.focus();
      }
    };

    _this.clear = function () {
      if (_this.inputRef) {
        _this.inputRef.clear();
      }
    }; // todos: remove focused in next major version.


    _this.state = {
      focused: props.focused || false
    };
    return _this;
  }

  (0, _createClass2["default"])(Input, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      if (nextProps.focused !== this.state.focused) {
        this.setState({
          focused: nextProps.focused
        });
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.inputRef && (this.props.autoFocus || this.props.focused)) {
        this.inputRef.focus();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.inputRef && this.props.focused) {
        this.inputRef.focus();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/_react["default"].createElement(_reactNative.TextInput, (0, _extends2["default"])({
        ref: function ref(el) {
          return _this2.inputRef = el;
        },
        underlineColorAndroid: "transparent"
      }, this.props));
    }
  }]);
  return Input;
}(_react["default"].Component);

var _default = Input;
exports["default"] = _default;