"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireDefault(require("react"));

var _cascader = _interopRequireDefault(require("../picker/cascader"));

var _MultiPicker = _interopRequireDefault(require("../picker/MultiPicker"));

var _Picker = _interopRequireDefault(require("../picker/Picker"));

function getDefaultProps() {
  return {
    cols: 3,
    cascade: true,
    value: [],
    onChange: function onChange() {}
  };
}

var PickerView = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(PickerView, _React$Component);

  var _super = (0, _createSuper2["default"])(PickerView);

  function PickerView() {
    var _this;

    (0, _classCallCheck2["default"])(this, PickerView);
    _this = _super.apply(this, arguments);

    _this.getCol = function () {
      var _this$props = _this.props,
          data = _this$props.data,
          indicatorStyle = _this$props.indicatorStyle,
          itemStyle = _this$props.itemStyle;
      return data.map(function (col, index) {
        return /*#__PURE__*/_react["default"].createElement(_Picker["default"], {
          key: index,
          style: {
            flex: 1
          },
          indicatorStyle: indicatorStyle,
          itemStyle: itemStyle
        }, col.map(function (item) {
          return /*#__PURE__*/_react["default"].createElement(_Picker["default"].Item, {
            key: item.value,
            value: item.value
          }, item.label);
        }));
      });
    };

    return _this;
  }

  (0, _createClass2["default"])(PickerView, [{
    key: "render",
    value: function render() {
      // tslint:disable-next-line:no-this-assignment
      var props = this.props;
      var picker;

      if (props.cascade) {
        picker = /*#__PURE__*/_react["default"].createElement(_cascader["default"], {
          data: props.data,
          value: props.value,
          onChange: props.onChange,
          onScrollChange: props.onScrollChange,
          cols: props.cols,
          indicatorStyle: props.indicatorStyle,
          pickerItemStyle: props.itemStyle
        });
      } else {
        picker = /*#__PURE__*/_react["default"].createElement(_MultiPicker["default"], {
          selectedValue: props.value,
          onValueChange: props.onChange,
          onScrollChange: props.onScrollChange,
          style: {
            flexDirection: 'row'
          }
        }, this.getCol());
      }

      return picker;
    }
  }]);
  return PickerView;
}(_react["default"].Component);

exports["default"] = PickerView;
PickerView.defaultProps = getDefaultProps();