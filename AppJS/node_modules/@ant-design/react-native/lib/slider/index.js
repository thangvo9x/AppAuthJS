"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _slider = _interopRequireDefault(require("@react-native-community/slider"));

var _style = require("../style");

var SliderAntm = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(SliderAntm, _React$Component);

  var _super = (0, _createSuper2["default"])(SliderAntm);

  function SliderAntm() {
    (0, _classCallCheck2["default"])(this, SliderAntm);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(SliderAntm, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          defaultValue = _this$props.defaultValue,
          value = _this$props.value,
          min = _this$props.min,
          max = _this$props.max,
          step = _this$props.step,
          disabled = _this$props.disabled,
          onChange = _this$props.onChange,
          onAfterChange = _this$props.onAfterChange,
          maximumTrackTintColor = _this$props.maximumTrackTintColor,
          minimumTrackTintColor = _this$props.minimumTrackTintColor;
      return /*#__PURE__*/_react["default"].createElement(_style.WithTheme, null, function (_, theme) {
        return /*#__PURE__*/_react["default"].createElement(_reactNative.View, null, /*#__PURE__*/_react["default"].createElement(_slider["default"], {
          value: defaultValue || value,
          minimumValue: min,
          maximumValue: max,
          step: step,
          minimumTrackTintColor: minimumTrackTintColor || theme.brand_primary,
          maximumTrackTintColor: maximumTrackTintColor || theme.border_color_base,
          disabled: disabled,
          onValueChange: onChange,
          onSlidingComplete: onAfterChange
        }));
      });
    }
  }]);
  return SliderAntm;
}(_react["default"].Component);

exports["default"] = SliderAntm;
SliderAntm.defaultProps = {
  onChange: function onChange() {},
  onAfterChange: function onAfterChange() {},
  defaultValue: 0,
  disabled: false
};