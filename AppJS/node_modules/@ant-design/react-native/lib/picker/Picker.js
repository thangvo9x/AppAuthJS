"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _react = _interopRequireDefault(require("react"));

var _NativePicker = _interopRequireDefault(require("./NativePicker"));

var Item = _NativePicker["default"].Item;

var Picker = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(Picker, _React$Component);

  var _super = (0, _createSuper2["default"])(Picker);

  function Picker() {
    (0, _classCallCheck2["default"])(this, Picker);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(Picker, [{
    key: "getValue",
    value: function getValue() {
      if ('selectedValue' in this.props) {
        return this.props.selectedValue;
      }

      var children = _react["default"].Children.toArray(this.props.children);

      return children && children[0] && children[0].props.value;
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return this.props.selectedValue !== nextProps.selectedValue || this.props.children !== nextProps.children;
    }
  }, {
    key: "render",
    value: function render() {
      var children = _react["default"].Children.map(this.props.children, function (c) {
        return /*#__PURE__*/_react["default"].createElement(Item, {
          label: c.props.children + '',
          value: c.props.value,
          key: c.key
        });
      });

      return /*#__PURE__*/_react["default"].createElement(_NativePicker["default"], (0, _extends2["default"])({}, this.props), children);
    }
  }]);
  return Picker;
}(_react["default"].Component);

Picker.defaultProps = {
  children: []
};

Picker.Item = function () {};

var _default = Picker;
exports["default"] = _default;