import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

import React from 'react';
import { View } from 'react-native';
import { WithTheme } from '../style';
import CardBody from './CardBody';
import CardFooter from './CardFooter';
import CardHeader from './CardHeader';
import CardStyles from './style/index';

var Card = /*#__PURE__*/function (_React$Component) {
  _inherits(Card, _React$Component);

  var _super = _createSuper(Card);

  function Card() {
    _classCallCheck(this, Card);

    return _super.apply(this, arguments);
  }

  _createClass(Card, [{
    key: "render",
    value: function render() {
      var _a = this.props,
          style = _a.style,
          styles = _a.styles,
          full = _a.full,
          children = _a.children,
          restProps = __rest(_a, ["style", "styles", "full", "children"]);

      return /*#__PURE__*/React.createElement(WithTheme, {
        themeStyles: CardStyles,
        styles: styles
      }, function (s) {
        var cardStyle = full ? s.full : {};
        var childDom = React.Children.map(children, function (child) {
          return /*#__PURE__*/React.cloneElement(child, {
            s: s
          });
        });
        return /*#__PURE__*/React.createElement(View, _extends({
          style: [s.card, cardStyle, style]
        }, restProps), childDom);
      });
    }
  }]);

  return Card;
}(React.Component);

export { Card as default };
Card.defaultProps = {
  style: {},
  full: false
};
Card.Header = CardHeader;
Card.Body = CardBody;
Card.Footer = CardFooter;