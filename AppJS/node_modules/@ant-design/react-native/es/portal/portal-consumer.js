import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';

var PortalConsumer = /*#__PURE__*/function (_React$Component) {
  _inherits(PortalConsumer, _React$Component);

  var _super = _createSuper(PortalConsumer);

  function PortalConsumer() {
    _classCallCheck(this, PortalConsumer);

    return _super.apply(this, arguments);
  }

  _createClass(PortalConsumer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.manager) {
        throw new Error('Looks like you forgot to wrap your root component with `Provider` component from `@ant-design/react-native`.\n\n');
      }

      this._key = this.props.manager.mount(this.props.children);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.props.manager.update(this._key, this.props.children);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.props.manager.unmount(this._key);
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return PortalConsumer;
}(React.Component);

export { PortalConsumer as default };