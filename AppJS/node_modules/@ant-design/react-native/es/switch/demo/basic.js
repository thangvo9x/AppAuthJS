import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';
import { List, Switch } from '../../';

var SwitchExample = /*#__PURE__*/function (_React$Component) {
  _inherits(SwitchExample, _React$Component);

  var _super = _createSuper(SwitchExample);

  function SwitchExample(props) {
    var _this;

    _classCallCheck(this, SwitchExample);

    _this = _super.call(this, props);

    _this.onSwitchChange = function (value) {
      _this.setState({
        checked: value
      });
    };

    _this.state = {
      checked: false
    };
    return _this;
  }

  _createClass(SwitchExample, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(List, {
        style: {
          marginTop: 20
        }
      }, /*#__PURE__*/React.createElement(List.Item, {
        extra: /*#__PURE__*/React.createElement(Switch, {
          checked: true
        })
      }, "On(controlled)"), /*#__PURE__*/React.createElement(List.Item, {
        extra: /*#__PURE__*/React.createElement(Switch, null)
      }, "Off(controlled)"), /*#__PURE__*/React.createElement(List.Item, {
        extra: /*#__PURE__*/React.createElement(Switch, {
          checked: this.state.checked,
          onChange: this.onSwitchChange
        })
      }, "onChange event, switch status: ", this.state.checked ? 'open' : 'close'), /*#__PURE__*/React.createElement(List.Item, {
        extra: /*#__PURE__*/React.createElement(Switch, {
          disabled: true
        })
      }, "disabled"), /*#__PURE__*/React.createElement(List.Item, {
        extra: /*#__PURE__*/React.createElement(Switch, {
          color: "red",
          checked: true
        })
      }, "color"));
    }
  }]);

  return SwitchExample;
}(React.Component);

export { SwitchExample as default };