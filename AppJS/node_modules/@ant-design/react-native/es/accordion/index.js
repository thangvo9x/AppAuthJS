import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

import React from 'react';
import { Text, View } from 'react-native';
import RNAccordion from 'react-native-collapsible/Accordion';
import Icon from '../icon';
import { WithTheme } from '../style';
import AccordionStyles from './style/index';

var AccordionPanel = /*#__PURE__*/function (_React$Component) {
  _inherits(AccordionPanel, _React$Component);

  var _super = _createSuper(AccordionPanel);

  function AccordionPanel() {
    _classCallCheck(this, AccordionPanel);

    return _super.apply(this, arguments);
  }

  _createClass(AccordionPanel, [{
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return AccordionPanel;
}(React.Component);

var Accordion = /*#__PURE__*/function (_React$Component2) {
  _inherits(Accordion, _React$Component2);

  var _super2 = _createSuper(Accordion);

  function Accordion() {
    var _this;

    _classCallCheck(this, Accordion);

    _this = _super2.apply(this, arguments);

    _this.renderHeader = function (styles) {
      return function (section, _, isActive) {
        return /*#__PURE__*/React.createElement(View, {
          style: [styles.header, section.style]
        }, /*#__PURE__*/React.isValidElement(section.title) ? section.title : /*#__PURE__*/React.createElement(View, {
          style: styles.headerWrap
        }, /*#__PURE__*/React.createElement(Text, {
          style: styles.headerText
        }, section.title)), /*#__PURE__*/React.createElement(View, {
          style: styles.arrow
        }, /*#__PURE__*/React.createElement(Icon, {
          name: isActive ? 'up' : 'down',
          style: styles.arrow
        })));
      };
    };

    _this.renderContent = function (styles) {
      return function (section) {
        return /*#__PURE__*/React.isValidElement(section.content) ? section.content : /*#__PURE__*/React.createElement(View, {
          style: styles.content
        }, /*#__PURE__*/React.createElement(Text, {
          style: styles.contentText
        }, section.content));
      };
    };

    return _this;
  }

  _createClass(Accordion, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _a = this.props,
          children = _a.children,
          style = _a.style,
          _a$activeSections = _a.activeSections,
          activeSections = _a$activeSections === void 0 ? [] : _a$activeSections,
          rest = __rest(_a, ["children", "style", "activeSections"]);

      var styles = this.props.styles;
      var headers = React.Children.map(children, function (child) {
        return {
          title: child.props.header,
          content: child.props.children,
          style: child.props.style || {}
        };
      });
      return /*#__PURE__*/React.createElement(WithTheme, {
        themeStyles: AccordionStyles,
        styles: styles
      }, function (s) {
        return /*#__PURE__*/React.createElement(View, {
          style: [s.container, style]
        }, /*#__PURE__*/React.createElement(RNAccordion, _extends({
          underlayColor: "transparent",
          duration: 0
        }, rest, {
          renderHeader: _this2.renderHeader(s),
          renderContent: _this2.renderContent(s),
          sections: headers,
          activeSections: activeSections
        })));
      });
    }
  }]);

  return Accordion;
}(React.Component);

Accordion.Panel = AccordionPanel;
export default Accordion;