import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';
import { Text, TouchableHighlight, View } from 'react-native';
import Modal from '../modal/ModalView';
import { WithTheme } from '../style';
import ActionSheetStyles from './style/index';

var ActionSheetAndroid = /*#__PURE__*/function (_React$PureComponent) {
  _inherits(ActionSheetAndroid, _React$PureComponent);

  var _super = _createSuper(ActionSheetAndroid);

  function ActionSheetAndroid(props) {
    var _this;

    _classCallCheck(this, ActionSheetAndroid);

    _this = _super.call(this, props);

    _this.close = function () {
      _this.setState({
        visible: false
      });
    };

    _this.state = {
      visible: _this.props.visible || false
    };
    return _this;
  }

  _createClass(ActionSheetAndroid, [{
    key: "confirm",
    value: function confirm(index) {
      var callback = this.props.callback;

      if (callback) {
        callback(index);
      }

      this.setState({
        visible: false
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          config = _this$props.config,
          onAnimationEnd = _this$props.onAnimationEnd;
      var title = config.title,
          message = config.message,
          options = config.options,
          destructiveButtonIndex = config.destructiveButtonIndex,
          cancelButtonIndex = config.cancelButtonIndex;
      return /*#__PURE__*/React.createElement(WithTheme, {
        themeStyles: ActionSheetStyles,
        styles: this.props.styles
      }, function (styles, theme) {
        var titleMsg = !!title && /*#__PURE__*/React.createElement(View, {
          style: styles.title,
          key: "0"
        }, /*#__PURE__*/React.createElement(Text, {
          style: styles.titleText
        }, title));
        var content = options.map(function (item, index) {
          return /*#__PURE__*/React.createElement(View, {
            key: index,
            style: [cancelButtonIndex === index ? styles.cancelBtn : undefined]
          }, /*#__PURE__*/React.createElement(TouchableHighlight, {
            style: [styles.btn],
            underlayColor: theme.fill_tap,
            onPress: function onPress() {
              return _this2.confirm(index);
            }
          }, /*#__PURE__*/React.createElement(Text, {
            style: [styles.btnText, destructiveButtonIndex === index ? styles.destructiveBtn : undefined]
          }, item)), cancelButtonIndex === index ? /*#__PURE__*/React.createElement(View, {
            style: styles.cancelBtnMask
          }) : null);
        });
        return /*#__PURE__*/React.createElement(View, {
          style: styles.container
        }, /*#__PURE__*/React.createElement(Modal, {
          animationDuration: 200,
          animateAppear: true,
          visible: _this2.state.visible,
          onAnimationEnd: onAnimationEnd,
          style: styles.content,
          animationType: "slide-up",
          maskClosable: true,
          onClose: function onClose() {
            return _this2.confirm(cancelButtonIndex || -1);
          }
        }, /*#__PURE__*/React.createElement(View, null, titleMsg, !!message && /*#__PURE__*/React.createElement(View, {
          style: styles.message,
          key: "1"
        }, /*#__PURE__*/React.createElement(Text, null, message)), /*#__PURE__*/React.createElement(View, null, content))));
      });
    }
  }]);

  return ActionSheetAndroid;
}(React.PureComponent);

export default ActionSheetAndroid;