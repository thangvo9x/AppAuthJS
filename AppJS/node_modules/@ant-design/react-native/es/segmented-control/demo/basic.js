import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

/* tslint:disable:no-console */
import React from 'react';
import { Text, View } from 'react-native';
import { SegmentedControl, WhiteSpace } from '../../';

var BasicTagExample = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicTagExample, _React$Component);

  var _super = _createSuper(BasicTagExample);

  function BasicTagExample() {
    var _this;

    _classCallCheck(this, BasicTagExample);

    _this = _super.apply(this, arguments);

    _this.onChange = function (e) {
      console.log("selectedIndex:".concat(e.nativeEvent.selectedSegmentIndex));
    };

    _this.onValueChange = function (value) {
      console.log(value);
    };

    return _this;
  }

  _createClass(BasicTagExample, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(View, {
        style: {
          paddingTop: 60,
          paddingHorizontal: 20
        }
      }, /*#__PURE__*/React.createElement(Text, null, "Disabled"), /*#__PURE__*/React.createElement(SegmentedControl, {
        values: ['Segment1', 'Segment2'],
        disabled: true
      }), /*#__PURE__*/React.createElement(WhiteSpace, {
        size: "lg"
      }), /*#__PURE__*/React.createElement(Text, null, "TintColor and Style"), /*#__PURE__*/React.createElement(SegmentedControl, {
        values: ['Segment1', 'Segment2', 'Segment3'],
        tintColor: '#ff0000',
        style: {
          height: 40,
          width: 280
        }
      }), /*#__PURE__*/React.createElement(WhiteSpace, {
        size: "lg"
      }), /*#__PURE__*/React.createElement(Text, null, "SelectedIndex"), /*#__PURE__*/React.createElement(SegmentedControl, {
        selectedIndex: 1,
        values: ['Segment1', 'Segment2', 'Segment3']
      }), /*#__PURE__*/React.createElement(WhiteSpace, {
        size: "lg"
      }), /*#__PURE__*/React.createElement(Text, null, "onChange/onValueChange"), /*#__PURE__*/React.createElement(SegmentedControl, {
        values: ['Segment1', 'Segment2', 'Segment3'],
        onChange: this.onChange,
        onValueChange: this.onValueChange
      }));
    }
  }]);

  return BasicTagExample;
}(React.Component);

export { BasicTagExample as default };