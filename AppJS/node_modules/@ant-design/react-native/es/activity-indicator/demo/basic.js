import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';
import { StyleSheet, Text, View } from 'react-native';
import { ActivityIndicator, Button, Flex, WhiteSpace, WingBlank } from '../../';

var ActivityIndicatorExample = /*#__PURE__*/function (_React$Component) {
  _inherits(ActivityIndicatorExample, _React$Component);

  var _super = _createSuper(ActivityIndicatorExample);

  function ActivityIndicatorExample(props) {
    var _this;

    _classCallCheck(this, ActivityIndicatorExample);

    _this = _super.call(this, props);
    _this.state = {
      animating: false
    };
    _this.loadingToast = _this.loadingToast.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(ActivityIndicatorExample, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this.closeTimer);
    }
  }, {
    key: "loadingToast",
    value: function loadingToast() {
      var _this2 = this;

      this.setState({
        animating: !this.state.animating
      });
      this.closeTimer = setTimeout(function () {
        _this2.setState({
          animating: !_this2.state.animating
        });
      }, 2000);
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(View, {
        style: [styles.demo]
      }, /*#__PURE__*/React.createElement(WingBlank, null, /*#__PURE__*/React.createElement(Flex, null, /*#__PURE__*/React.createElement(Flex.Item, null, /*#__PURE__*/React.createElement(Text, null, "Icon without text")), /*#__PURE__*/React.createElement(Flex.Item, null, /*#__PURE__*/React.createElement(ActivityIndicator, null)))), /*#__PURE__*/React.createElement(WhiteSpace, {
        size: "xl",
        style: {
          backgroundColor: '#fff'
        }
      }), /*#__PURE__*/React.createElement(WingBlank, null, /*#__PURE__*/React.createElement(Flex, null, /*#__PURE__*/React.createElement(Flex.Item, null, /*#__PURE__*/React.createElement(Text, null, "Icon with text")), /*#__PURE__*/React.createElement(Flex.Item, null, /*#__PURE__*/React.createElement(ActivityIndicator, {
        text: "Loading..."
      })))), /*#__PURE__*/React.createElement(WhiteSpace, {
        size: "xl",
        style: {
          backgroundColor: '#fff'
        }
      }), /*#__PURE__*/React.createElement(WingBlank, null, /*#__PURE__*/React.createElement(Flex, null, /*#__PURE__*/React.createElement(Flex.Item, null, /*#__PURE__*/React.createElement(Text, null, "Dark Background")), /*#__PURE__*/React.createElement(Flex.Item, null, /*#__PURE__*/React.createElement(View, {
        style: [styles.darkBg]
      }, /*#__PURE__*/React.createElement(ActivityIndicator, {
        color: "#fff"
      }))))), /*#__PURE__*/React.createElement(WhiteSpace, {
        size: "xl",
        style: {
          backgroundColor: '#fff'
        }
      }), /*#__PURE__*/React.createElement(WingBlank, null, /*#__PURE__*/React.createElement(Flex, null, /*#__PURE__*/React.createElement(Flex.Item, null, /*#__PURE__*/React.createElement(Text, null, "Large Size")), /*#__PURE__*/React.createElement(Flex.Item, null, /*#__PURE__*/React.createElement(ActivityIndicator, {
        size: "large"
      })))), /*#__PURE__*/React.createElement(WhiteSpace, {
        size: "xl",
        style: {
          backgroundColor: '#fff'
        }
      }), /*#__PURE__*/React.createElement(WingBlank, null, /*#__PURE__*/React.createElement(Button, {
        onPress: this.loadingToast
      }, "Click to show Toast")), /*#__PURE__*/React.createElement(ActivityIndicator, {
        animating: this.state.animating,
        toast: true,
        size: "large",
        text: "Loading..."
      }));
    }
  }]);

  return ActivityIndicatorExample;
}(React.Component);

export { ActivityIndicatorExample as default };
var styles = StyleSheet.create({
  demo: {
    marginTop: 20
  },
  darkBg: {
    alignItems: 'center',
    justifyContent: 'center',
    width: 89,
    height: 89,
    backgroundColor: '#2B2F42'
  },
  gray: {
    backgroundColor: '#CCC'
  },
  horizontal: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    padding: 8
  }
});