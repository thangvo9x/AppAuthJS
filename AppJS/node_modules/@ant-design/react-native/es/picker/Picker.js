import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';
import NativePicker from './NativePicker';
var Item = NativePicker.Item;

var Picker = /*#__PURE__*/function (_React$Component) {
  _inherits(Picker, _React$Component);

  var _super = _createSuper(Picker);

  function Picker() {
    _classCallCheck(this, Picker);

    return _super.apply(this, arguments);
  }

  _createClass(Picker, [{
    key: "getValue",
    value: function getValue() {
      if ('selectedValue' in this.props) {
        return this.props.selectedValue;
      }

      var children = React.Children.toArray(this.props.children);
      return children && children[0] && children[0].props.value;
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return this.props.selectedValue !== nextProps.selectedValue || this.props.children !== nextProps.children;
    }
  }, {
    key: "render",
    value: function render() {
      var children = React.Children.map(this.props.children, function (c) {
        return /*#__PURE__*/React.createElement(Item, {
          label: c.props.children + '',
          value: c.props.value,
          key: c.key
        });
      });
      return /*#__PURE__*/React.createElement(NativePicker, _extends({}, this.props), children);
    }
  }]);

  return Picker;
}(React.Component);

Picker.defaultProps = {
  children: []
};

Picker.Item = function () {};

export default Picker;