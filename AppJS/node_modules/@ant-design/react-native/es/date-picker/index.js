import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

import React from 'react';
import PickerStyles from '../picker/style/index';
import { WithTheme } from '../style';
import { getComponentLocale } from '../_util/getLocale';
import AntDatePicker from './datepicker';
import PopupDatePicker from './datepicker/Popup';
import { formatProps } from './utils';
import { LocaleContext } from '../locale-provider';

var DatePicker = /*#__PURE__*/function (_React$Component) {
  _inherits(DatePicker, _React$Component);

  var _super = _createSuper(DatePicker);

  function DatePicker() {
    _classCallCheck(this, DatePicker);

    return _super.apply(this, arguments);
  }

  _createClass(DatePicker, [{
    key: "render",
    value: function render() {
      var _this = this;

      var _a = this.props,
          children = _a.children,
          value = _a.value,
          defaultDate = _a.defaultDate,
          itemStyle = _a.itemStyle,
          restProps = __rest(_a, ["children", "value", "defaultDate", "itemStyle"]);

      var locale = getComponentLocale(this.props, this.context, 'DatePicker', function () {
        return require('./locale/zh_CN');
      });
      var okText = locale.okText,
          dismissText = locale.dismissText,
          extra = locale.extra,
          DatePickerLocale = locale.DatePickerLocale;
      var dataPicker = /*#__PURE__*/React.createElement(AntDatePicker, {
        minuteStep: this.props.minuteStep,
        locale: DatePickerLocale,
        mode: this.props.mode,
        minDate: this.props.minDate,
        maxDate: this.props.maxDate,
        defaultDate: defaultDate,
        date: value,
        onValueChange: this.props.onValueChange,
        itemStyle: itemStyle
      });
      return /*#__PURE__*/React.createElement(WithTheme, {
        styles: restProps.styles,
        themeStyles: PickerStyles
      }, function (styles) {
        return /*#__PURE__*/React.createElement(PopupDatePicker, _extends({
          datePicker: dataPicker
        }, restProps, {
          styles: styles,
          date: value,
          dismissText: _this.props.dismissText || dismissText,
          okText: _this.props.okText || okText
        }), children && /*#__PURE__*/React.isValidElement(children) && /*#__PURE__*/React.cloneElement(children, {
          extra: value ? formatProps(_this.props, value) : _this.props.extra || extra
        }));
      });
    }
  }]);

  return DatePicker;
}(React.Component);

export { DatePicker as default };
DatePicker.defaultProps = {
  mode: 'datetime',
  triggerType: 'onPress',
  minuteStep: 1
};
DatePicker.contextType = LocaleContext;