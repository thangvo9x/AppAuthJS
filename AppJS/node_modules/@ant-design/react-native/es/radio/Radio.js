import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';
import { Text, TouchableWithoutFeedback, View } from 'react-native';
import Icon from '../icon';
import { WithTheme } from '../style';
import variables from '../style/themes/default';
import RadioStyles from './style/index';

var Radio = /*#__PURE__*/function (_React$Component) {
  _inherits(Radio, _React$Component);

  var _super = _createSuper(Radio);

  function Radio(props, context) {
    var _this;

    _classCallCheck(this, Radio);

    _this = _super.call(this, props, context);

    _this.handleClick = function () {
      if (_this.props.disabled) {
        return;
      }

      if (!('checked' in _this.props)) {
        _this.setState({
          checked: true
        });
      }

      if (_this.props.onChange) {
        _this.props.onChange({
          target: {
            checked: true
          }
        });
      }
    };

    _this.state = {
      checked: props.checked || props.defaultChecked || false
    };
    return _this;
  }

  _createClass(Radio, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      if ('checked' in nextProps) {
        this.setState({
          checked: !!nextProps.checked
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          style = _this$props.style,
          disabled = _this$props.disabled,
          children = _this$props.children;
      return /*#__PURE__*/React.createElement(WithTheme, {
        styles: this.props.styles,
        themeStyles: RadioStyles
      }, function (styles) {
        var checked = _this2.state.checked;
        var icon;

        if (checked) {
          icon = disabled ? /*#__PURE__*/React.createElement(Icon, {
            name: "check",
            style: [styles.icon, style]
          }) : /*#__PURE__*/React.createElement(Icon, {
            name: "check",
            color: variables.brand_primary,
            style: [styles.icon, style]
          });
        }

        return /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {
          onPress: _this2.handleClick
        }, /*#__PURE__*/React.createElement(View, {
          style: [styles.wrapper]
        }, icon, typeof children === 'string' ?
        /*#__PURE__*/
        // tslint:disable-next-line:jsx-no-multiline-js
        React.createElement(Text, null, _this2.props.children) : children));
      });
    }
  }]);

  return Radio;
}(React.Component);

export { Radio as default };