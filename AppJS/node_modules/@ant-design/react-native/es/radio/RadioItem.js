import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';
import { Text, View } from 'react-native';
import List from '../list/index';
import { WithTheme } from '../style';
import Radio from './Radio';
import RadioItemStyles from './style/index';
var ListItem = List.Item;

var RadioItem = /*#__PURE__*/function (_React$Component) {
  _inherits(RadioItem, _React$Component);

  var _super = _createSuper(RadioItem);

  function RadioItem() {
    var _this;

    _classCallCheck(this, RadioItem);

    _this = _super.apply(this, arguments);

    _this.handleClick = function () {
      if (_this.radio) {
        _this.radio.handleClick();
      }
    };

    return _this;
  }

  _createClass(RadioItem, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          style = _this$props.style,
          radioStyle = _this$props.radioStyle,
          defaultChecked = _this$props.defaultChecked,
          checked = _this$props.checked,
          disabled = _this$props.disabled,
          children = _this$props.children,
          onChange = _this$props.onChange;
      return /*#__PURE__*/React.createElement(WithTheme, {
        styles: this.props.styles,
        themeStyles: RadioItemStyles
      }, function (styles) {
        var contentDom = null;

        if (children && /*#__PURE__*/React.isValidElement(children)) {
          contentDom = /*#__PURE__*/React.createElement(View, {
            style: {
              flex: 1
            }
          }, children);
        } else {
          var contentStyle = [styles.radioItemContent, disabled ? styles.radioItemContentDisable : {}];
          contentDom = /*#__PURE__*/React.createElement(Text, {
            style: contentStyle,
            numberOfLines: 1
          }, _this2.props.children);
        }

        var radioEl = /*#__PURE__*/React.createElement(Radio, {
          ref: function ref(_ref) {
            return _this2.radio = _ref;
          },
          style: radioStyle,
          defaultChecked: defaultChecked,
          checked: checked,
          onChange: onChange,
          disabled: disabled
        });
        return /*#__PURE__*/React.createElement(ListItem, {
          style: style,
          onPress: disabled ? undefined : _this2.handleClick,
          extra: radioEl
        }, contentDom);
      });
    }
  }]);

  return RadioItem;
}(React.Component);

export { RadioItem as default };