import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';
import { Dimensions, Image, StyleSheet, Text, View } from 'react-native';
import Carousel from '../carousel/index';
import Flex from '../flex/index';
import { WithTheme } from '../style';
import GridStyles from './style/index';

var Grid = /*#__PURE__*/function (_React$Component) {
  _inherits(Grid, _React$Component);

  var _super = _createSuper(Grid);

  function Grid() {
    _classCallCheck(this, Grid);

    return _super.apply(this, arguments);
  }

  _createClass(Grid, [{
    key: "getFlexItemStyle",
    value: function getFlexItemStyle(columnNum) {
      return {
        height: Dimensions.get('window').width / columnNum,
        borderRightWidth: this.props.hasLine ? StyleSheet.hairlineWidth : 0
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          data = _this$props.data,
          hasLine = _this$props.hasLine,
          isCarousel = _this$props.isCarousel,
          _this$props$onPress = _this$props.onPress,
          _onPress = _this$props$onPress === void 0 ? function () {} : _this$props$onPress,
          carouselProps = _this$props.carouselProps;

      var columnNum = this.props.columnNum;
      var customItemStyle = this.props.itemStyle;
      var carouselMaxRow = this.props.carouselMaxRow;
      var dataLength = data && data.length || 0;
      var rowCount = Math.ceil(dataLength / columnNum);
      return /*#__PURE__*/React.createElement(WithTheme, {
        styles: this.props.styles,
        themeStyles: GridStyles
      }, function (styles) {
        var renderItem = _this.props.renderItem || function (dataItem, index) {
          return /*#__PURE__*/React.createElement(Flex, {
            direction: "column",
            justify: "center",
            style: {
              flex: 1
            },
            onPress: function onPress() {
              return _onPress(dataItem, index);
            }
          }, /*#__PURE__*/React.isValidElement(dataItem.icon) ? dataItem.icon : /*#__PURE__*/React.createElement(Image, {
            source: {
              uri: dataItem.icon
            },
            style: styles.icon
          }), /*#__PURE__*/React.createElement(Text, {
            style: styles.text
          }, dataItem.text));
        };

        var flexItemStyle = _this.getFlexItemStyle(columnNum);

        var rowsArr = [];

        for (var i = 0; i < rowCount; i++) {
          var rowArr = [];

          var _loop = function _loop(j) {
            var dataIndex = i * columnNum + j;

            if (dataIndex < dataLength) {
              var el = data && data[dataIndex];
              rowArr.push( /*#__PURE__*/React.createElement(Flex.Item, {
                key: j,
                style: [styles.grayBorderBox, flexItemStyle, {
                  borderLeftWidth: hasLine && j === 0 ? StyleSheet.hairlineWidth : 0
                }, customItemStyle],
                onPress: function onPress() {
                  return _onPress(el, dataIndex);
                }
              }, el && renderItem(el, dataIndex)));
            } else {
              rowArr.push( /*#__PURE__*/React.createElement(Flex.Item, {
                key: j,
                style: [styles.grayBorderBox, flexItemStyle, customItemStyle]
              }));
            }
          };

          for (var j = 0; j < columnNum; j++) {
            _loop(j);
          }

          var boxBorderStyle = {
            borderTopWidth: hasLine && i === 0 ? StyleSheet.hairlineWidth : 0,
            borderBottomWidth: hasLine ? StyleSheet.hairlineWidth : 0
          };
          rowsArr.push( /*#__PURE__*/React.createElement(Flex, {
            key: i,
            style: [styles.grayBorderBox, boxBorderStyle]
          }, rowArr));
        }

        var pageCount = Math.ceil(rowCount / carouselMaxRow);
        var pagesArr = [];

        if (isCarousel && pageCount > 1) {
          for (var pageIndex = 0; pageIndex < pageCount; pageIndex++) {
            var pageRows = [];

            for (var ii = 0; ii < carouselMaxRow; ii++) {
              var rowIndex = pageIndex * carouselMaxRow + ii;

              if (rowIndex < rowCount) {
                pageRows.push(rowsArr[rowIndex]);
              } else {
                var res = [];

                for (var jjj = 0; jjj < columnNum; jjj++) {
                  res.push( /*#__PURE__*/React.createElement(Flex.Item, {
                    key: jjj,
                    style: [styles.grayBorderBox, flexItemStyle]
                  }));
                }

                pageRows.push( /*#__PURE__*/React.createElement(Flex, {
                  key: rowIndex,
                  style: [styles.grayBorderBox, {
                    borderBottomWidth: hasLine ? StyleSheet.hairlineWidth : 0
                  }]
                }, res));
              }
            }

            pagesArr.push( /*#__PURE__*/React.createElement(View, {
              key: pageIndex,
              style: [styles.grayBorderBox, {
                borderTopWidth: hasLine && pageIndex !== 0 ? StyleSheet.hairlineWidth : 0
              }]
            }, pageRows));
          }
        }

        return isCarousel && pageCount > 1 ? /*#__PURE__*/React.createElement(Carousel, _extends({
          infinite: false,
          dots: true
        }, carouselProps), pagesArr) : /*#__PURE__*/React.createElement(Flex, {
          direction: "column"
        }, rowsArr);
      });
    }
  }]);

  return Grid;
}(React.Component);

export { Grid as default };
Grid.defaultProps = {
  data: [],
  hasLine: true,
  isCarousel: false,
  columnNum: 4,
  carouselMaxRow: 2,
  itemStyle: {},
  carouselProps: {}
};