import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React, { Component } from 'react';
import { Dimensions, Image, StyleSheet, TouchableOpacity } from 'react-native';
import Icon from '../icon';

var ImageItem = /*#__PURE__*/function (_Component) {
  _inherits(ImageItem, _Component);

  var _super = _createSuper(ImageItem);

  function ImageItem(props) {
    _classCallCheck(this, ImageItem);

    return _super.call(this, props);
  }

  _createClass(ImageItem, [{
    key: "UNSAFE_componentWillMount",
    value: function UNSAFE_componentWillMount() {
      var _Dimensions$get = Dimensions.get('window'),
          width = _Dimensions$get.width;

      var _this$props = this.props,
          imageMargin = _this$props.imageMargin,
          imagesPerRow = _this$props.imagesPerRow,
          containerWidth = _this$props.containerWidth;

      if (typeof containerWidth !== 'undefined') {
        width = containerWidth;
      }

      this._imageSize = (width - (imagesPerRow + 1) * imageMargin) / imagesPerRow;
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props2 = this.props,
          item = _this$props2.item,
          selected = _this$props2.selected,
          selectedMarker = _this$props2.selectedMarker,
          imageMargin = _this$props2.imageMargin;

      if (!item) {
        return null;
      }

      var marker = selectedMarker ? selectedMarker : /*#__PURE__*/React.createElement(Icon, {
        name: "check-circle",
        style: [styles.marker]
      });
      var image = item.node.image;
      return /*#__PURE__*/React.createElement(TouchableOpacity, {
        style: {
          marginBottom: imageMargin,
          marginRight: imageMargin
        },
        onPress: function onPress() {
          return _this._handleClick(image);
        }
      }, /*#__PURE__*/React.createElement(Image, {
        source: {
          uri: image.uri
        },
        style: {
          height: this._imageSize,
          width: this._imageSize
        }
      }), selected ? marker : null);
    }
  }, {
    key: "_handleClick",
    value: function _handleClick(item) {
      if (this.props.onPress) {
        this.props.onPress(item);
      }
    }
  }]);

  return ImageItem;
}(Component);

ImageItem.defaultProps = {
  item: {},
  selected: false
};
var styles = StyleSheet.create({
  marker: {
    position: 'absolute',
    top: 5,
    right: 5,
    backgroundColor: 'transparent'
  }
});
export default ImageItem;