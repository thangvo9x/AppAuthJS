import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';
import { Modal, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';
import varibles from '../style/themes/default';
import CameraRollPicker from './CameraRollPicker';
var styles = StyleSheet.create({
  statusBarBg: {
    height: 5 * 4
  },
  naviBar: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    borderBottomWidth: 1,
    borderBottomColor: '#d9d9d9',
    height: 11 * 4
  },
  barTitle: {
    flex: 1,
    textAlign: 'center',
    fontWeight: '500',
    marginLeft: 7 * 4,
    fontSize: 16
  },
  rightBtn: {
    width: 14 * 4,
    color: varibles.brand_primary,
    fontSize: 16
  }
});

var ImageRoll = /*#__PURE__*/function (_React$Component) {
  _inherits(ImageRoll, _React$Component);

  var _super = _createSuper(ImageRoll);

  function ImageRoll() {
    var _this;

    _classCallCheck(this, ImageRoll);

    _this = _super.apply(this, arguments);

    _this.onSelected = function (images, _) {
      _this.props.onSelected(images[0]);

      _this.props.onCancel();
    };

    return _this;
  }

  _createClass(ImageRoll, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          title = _this$props.title,
          cancelText = _this$props.cancelText,
          cameraPickerProps = _this$props.cameraPickerProps;
      return /*#__PURE__*/React.createElement(Modal, {
        animationType: "slide",
        visible: true,
        onRequestClose: function onRequestClose() {},
        transparent: false
      }, /*#__PURE__*/React.createElement(View, {
        style: {
          flex: 1
        }
      }, /*#__PURE__*/React.createElement(StatusBar, {
        barStyle: "light-content"
      }), /*#__PURE__*/React.createElement(View, {
        style: styles.statusBarBg
      }), /*#__PURE__*/React.createElement(View, {
        style: [styles.naviBar]
      }, /*#__PURE__*/React.createElement(Text, {
        style: [styles.barTitle]
      }, title), /*#__PURE__*/React.createElement(TouchableOpacity, {
        onPress: this.props.onCancel
      }, /*#__PURE__*/React.createElement(Text, {
        style: styles.rightBtn
      }, cancelText))), /*#__PURE__*/React.createElement(CameraRollPicker, _extends({
        selected: [],
        callback: this.onSelected,
        maximum: 1
      }, cameraPickerProps))));
    }
  }]);

  return ImageRoll;
}(React.Component);

export { ImageRoll as default };
ImageRoll.defaultProps = {
  title: '图片',
  cancelText: '取消',
  cameraPickerProps: {}
};