import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React, { isValidElement } from 'react';
import { Image, Text, TouchableWithoutFeedback, View } from 'react-native';
import Icon from '../icon';

var TabBarItem = /*#__PURE__*/function (_React$Component) {
  _inherits(TabBarItem, _React$Component);

  var _super = _createSuper(TabBarItem);

  function TabBarItem() {
    _classCallCheck(this, TabBarItem);

    return _super.apply(this, arguments);
  }

  _createClass(TabBarItem, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          title = _this$props.title,
          selected = _this$props.selected,
          tintColor = _this$props.tintColor,
          unselectedTintColor = _this$props.unselectedTintColor,
          icon = _this$props.icon,
          selectedIcon = _this$props.selectedIcon,
          onPress = _this$props.onPress,
          badge = _this$props.badge,
          iconStyle = _this$props.iconStyle;
      var styles = this.props.styles;
      var itemSelectedStyle = selected ? styles.barItemSelected : null;
      var badgeDom = badge ? /*#__PURE__*/React.createElement(View, {
        style: [styles.badge]
      }, /*#__PURE__*/React.createElement(Text, {
        style: [styles.badgeText]
      }, badge)) : null; // icon

      var source = selected && selectedIcon !== undefined ? selectedIcon : icon !== undefined ? icon : null;
      var color = selected ? tintColor : unselectedTintColor;
      var isIcon = source && source.type && source.type.displayName === 'Icon';
      return /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {
        onPress: onPress
      }, /*#__PURE__*/React.createElement(View, {
        style: [styles.barItem, itemSelectedStyle]
      }, /*#__PURE__*/React.createElement(View, null, source === null ? null : /*#__PURE__*/isValidElement(source) ? isIcon ? /*#__PURE__*/React.createElement(Icon, _extends({
        color: color
      }, source.props)) : source : /*#__PURE__*/React.createElement(Image, {
        source: source,
        style: [styles.barIcon, iconStyle]
      }), badgeDom), /*#__PURE__*/React.createElement(Text, {
        style: [styles.barItemTitle, {
          color: color
        }]
      }, title)));
    }
  }]);

  return TabBarItem;
}(React.Component);

export { TabBarItem as default };
TabBarItem.defaultProps = {
  onPress: function onPress() {}
};