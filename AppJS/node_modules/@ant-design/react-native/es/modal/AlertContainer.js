import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React, { isValidElement } from 'react';
import { ScrollView, Text } from 'react-native';
import Modal from './Modal';

var AlertContainer = /*#__PURE__*/function (_React$Component) {
  _inherits(AlertContainer, _React$Component);

  var _super = _createSuper(AlertContainer);

  function AlertContainer(props) {
    var _this;

    _classCallCheck(this, AlertContainer);

    _this = _super.call(this, props);

    _this.onBackAndroid = function () {
      var onBackHandler = _this.props.onBackHandler;

      if (typeof onBackHandler === 'function') {
        var flag = onBackHandler();

        if (flag) {
          _this.onClose();
        }

        return flag;
      }

      if (_this.state.visible) {
        _this.onClose();

        return true;
      }

      return false;
    };

    _this.onClose = function () {
      _this.setState({
        visible: false
      });
    };

    _this.state = {
      visible: true
    };
    return _this;
  }

  _createClass(AlertContainer, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          title = _this$props.title,
          actions = _this$props.actions,
          content = _this$props.content,
          onAnimationEnd = _this$props.onAnimationEnd;
      var footer = actions.map(function (button) {
        // tslint:disable-next-line:only-arrow-functions
        var orginPress = button.onPress || function () {};

        button.onPress = function () {
          var res = orginPress();

          if (res && res.then) {
            res.then(function () {
              _this2.onClose();
            });
          } else {
            _this2.onClose();
          }
        };

        return button;
      });
      return /*#__PURE__*/React.createElement(Modal, {
        transparent: true,
        title: title,
        visible: this.state.visible,
        footer: footer,
        onAnimationEnd: onAnimationEnd,
        onRequestClose: this.onBackAndroid,
        bodyStyle: {
          marginTop: 8,
          alignItems: 'center'
        }
      }, /*#__PURE__*/React.createElement(ScrollView, null, /*#__PURE__*/isValidElement(content) ? content : /*#__PURE__*/React.createElement(Text, null, content)));
    }
  }]);

  return AlertContainer;
}(React.Component);

export { AlertContainer as default };