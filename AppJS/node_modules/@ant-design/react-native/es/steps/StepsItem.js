import _typeof from "@babel/runtime/helpers/esm/typeof";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";

/* tslint:disable: jsx-no-multiline-js */
import React from 'react';
import { Text, View } from 'react-native';
import Icon from '../icon';
import { WithTheme } from '../style';

var StepsItem = /*#__PURE__*/function (_React$Component) {
  _inherits(StepsItem, _React$Component);

  var _super = _createSuper(StepsItem);

  function StepsItem() {
    _classCallCheck(this, StepsItem);

    return _super.apply(this, arguments);
  }

  _createClass(StepsItem, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          size = _this$props.size,
          last = _this$props.last,
          title = _this$props.title,
          description = _this$props.description,
          direction = _this$props.direction,
          status = _this$props.status,
          icon = _this$props.icon,
          styles = _this$props.styles,
          renderIcon = _this$props.renderIcon;
      var index = this.props.index;
      var current = this.props.current;
      var errorTail = this.props.errorTail;
      var starting = index < current || status === 'finish' || index === current || status === 'process';
      var waiting = index > current || status === 'wait';
      var error = status === 'error';
      return /*#__PURE__*/React.createElement(WithTheme, null, function (_, theme) {
        var headCls = '';
        var tailTopCls = '';
        var tailBottomCls = '';
        var sizeCls = size === 'small' ? '_s' : '_l';

        if (index < current || status === 'finish') {
          headCls = "head_blue".concat(sizeCls);
          tailTopCls = 'tail_blue';
          tailBottomCls = 'tail_blue';
        } else if (index === current || status === 'process') {
          headCls = "head_blue".concat(sizeCls);
          tailTopCls = 'tail_blue';
          tailBottomCls = 'tail_gray';
        } else if (index > current || status === 'wait') {
          headCls = "head_gray".concat(sizeCls);
          tailTopCls = 'tail_gray';
          tailBottomCls = 'tail_gray';
        } else if (status === 'error') {
          headCls = "head_red".concat(sizeCls);
          tailTopCls = 'tail_gray';
          tailBottomCls = 'tail_gray';
        }

        if (last) {
          tailTopCls = 'tail_last';
          tailBottomCls = 'tail_last';
        }

        if (errorTail > -1) {
          tailBottomCls = 'tail_error';
        }

        var iconSource;

        if (renderIcon) {
          iconSource = renderIcon({
            starting: starting,
            waiting: waiting,
            error: error
          });
        } else {
          if (starting) {
            iconSource = /*#__PURE__*/React.createElement(Icon, {
              name: "check",
              color: theme.color_icon_base,
              style: styles["icon".concat(sizeCls)]
            });
          } else if (waiting) {
            iconSource = /*#__PURE__*/React.createElement(Icon, {
              name: "ellipsis",
              color: theme.color_icon_base,
              style: styles["icon".concat(sizeCls)]
            });

            if (icon) {
              iconSource = icon;
            }
          } else if (error) {
            iconSource = /*#__PURE__*/React.createElement(Icon, {
              name: "close",
              color: theme.color_icon_base,
              style: styles["icon".concat(sizeCls)]
            });
          }
        }

        var isHorizontal = direction === 'horizontal';
        var parentStyle = isHorizontal ? {
          flexDirection: 'column'
        } : {
          flexDirection: 'row'
        };
        var childStyle = isHorizontal ? {
          flexDirection: 'row',
          flex: 1
        } : {
          flexDirection: 'column'
        };
        var styleSuffix = '';

        if (isHorizontal) {
          styleSuffix = '_h';
        }

        return /*#__PURE__*/React.createElement(View, {
          style: parentStyle
        }, /*#__PURE__*/React.createElement(View, {
          style: childStyle
        }, /*#__PURE__*/React.createElement(View, {
          style: [styles["head_default".concat(sizeCls)], styles[headCls]]
        }, /*#__PURE__*/React.isValidElement(iconSource) ? iconSource : null), /*#__PURE__*/React.createElement(View, {
          style: [styles["tail_default".concat(sizeCls).concat(styleSuffix)], styles[tailTopCls]]
        }), /*#__PURE__*/React.createElement(View, {
          style: [styles["tail_default".concat(sizeCls).concat(styleSuffix)], styles[tailBottomCls]]
        })), /*#__PURE__*/React.createElement(View, {
          style: styles["content".concat(sizeCls).concat(styleSuffix)]
        }, _typeof(title) !== 'object' ? /*#__PURE__*/React.createElement(Text, {
          style: [styles["title".concat(sizeCls)]]
        }, title) : /*#__PURE__*/React.createElement(View, null, title), _typeof(description) !== 'object' ? /*#__PURE__*/React.createElement(Text, {
          style: [styles["description".concat(sizeCls)]]
        }, description) : /*#__PURE__*/React.createElement(View, null, description)));
      });
    }
  }]);

  return StepsItem;
}(React.Component);

export { StepsItem as default };