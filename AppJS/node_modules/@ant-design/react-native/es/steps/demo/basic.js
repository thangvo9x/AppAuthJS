import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';
import { ScrollView, Text, View } from 'react-native';
import { Icon, Steps, WingBlank } from '../../';
var Step = Steps.Step;

var BasicTimelineExample = /*#__PURE__*/function (_React$Component) {
  _inherits(BasicTimelineExample, _React$Component);

  var _super = _createSuper(BasicTimelineExample);

  function BasicTimelineExample(props) {
    var _this;

    _classCallCheck(this, BasicTimelineExample);

    _this = _super.call(this, props);
    _this.state = {
      steps1: [{
        title: 'Finished',
        description: 'This is description'
      }, {
        title: 'In Progress',
        description: 'This is description'
      }, {
        title: 'Waiting',
        description: 'This is description'
      }],
      steps2: [{
        title: 'Finished',
        description: 'This is description',
        status: 'finish'
      }, {
        title: 'In Progress',
        description: 'This is description',
        status: 'process'
      }, {
        title: 'Waiting',
        description: 'This is description',
        status: 'error'
      }, {
        title: 'Waiting',
        description: 'This is description',
        status: 'wait'
      }]
    };
    return _this;
  }

  _createClass(BasicTimelineExample, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(ScrollView, {
        style: {
          flex: 1
        },
        automaticallyAdjustContentInsets: false,
        showsHorizontalScrollIndicator: false,
        showsVerticalScrollIndicator: false
      }, /*#__PURE__*/React.createElement(View, {
        style: {
          marginTop: 60
        }
      }, /*#__PURE__*/React.createElement(WingBlank, {
        size: "lg"
      }, /*#__PURE__*/React.createElement(Steps, {
        size: "small",
        current: 1,
        direction: "horizontal"
      }, this.state.steps1.map(function (item, index) {
        return /*#__PURE__*/React.createElement(Step, {
          key: index,
          title: /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Text, null, "title:", item.title)),
          status: item.status
        });
      })))), /*#__PURE__*/React.createElement(View, {
        style: {
          marginTop: 60
        }
      }, /*#__PURE__*/React.createElement(WingBlank, {
        size: "lg"
      }, /*#__PURE__*/React.createElement(Steps, {
        size: "small",
        current: 1
      }, this.state.steps1.map(function (item, index) {
        return /*#__PURE__*/React.createElement(Step, {
          key: index,
          title: /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Text, null, "title:", item.title)),
          description: /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Text, null, "desc:", item.description)),
          status: item.status
        });
      })))), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(WingBlank, {
        size: "lg"
      }, /*#__PURE__*/React.createElement(Steps, {
        size: "small"
      }, this.state.steps2.map(function (item, index) {
        return /*#__PURE__*/React.createElement(Step, {
          key: index,
          title: item.title,
          description: item.description,
          status: item.status
        });
      })))), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(WingBlank, {
        size: "lg"
      }, /*#__PURE__*/React.createElement(Steps, {
        current: 1
      }, this.state.steps1.map(function (item, index) {
        return /*#__PURE__*/React.createElement(Step, {
          key: index,
          title: item.title,
          description: item.description,
          status: item.status
        });
      })))), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(WingBlank, {
        size: "lg"
      }, /*#__PURE__*/React.createElement(Steps, null, this.state.steps2.map(function (item, index) {
        return /*#__PURE__*/React.createElement(Step, {
          key: index,
          title: item.title,
          description: item.description,
          status: item.status
        });
      })))), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(WingBlank, {
        size: "lg"
      }, /*#__PURE__*/React.createElement(Steps, {
        current: 1
      }, /*#__PURE__*/React.createElement(Step, {
        key: 0,
        title: "Finished",
        description: "This is description",
        status: "finish"
      }), /*#__PURE__*/React.createElement(Step, {
        key: 1,
        title: "Progress",
        description: "This is description",
        status: "progress"
      }), /*#__PURE__*/React.createElement(Step, {
        key: 2,
        title: "Wait",
        description: "This is description",
        status: "wait",
        icon: /*#__PURE__*/React.createElement(Icon, {
          name: "down",
          size: 20,
          color: "white"
        })
      })))), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(WingBlank, {
        size: "lg"
      }, /*#__PURE__*/React.createElement(Steps, {
        current: 1
      }, /*#__PURE__*/React.createElement(Step, {
        key: 0,
        title: "Finished",
        description: "This is description",
        status: "finish",
        renderIcon: function renderIcon(_ref) {
          var starting = _ref.starting,
              waiting = _ref.waiting,
              error = _ref.error;
          var icon;

          if (starting) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "home"
            });
          } else if (waiting) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "user"
            });
          } else if (error) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "star"
            });
          }

          return icon;
        }
      }), /*#__PURE__*/React.createElement(Step, {
        key: 1,
        title: "Progress",
        description: "This is description",
        status: "progress",
        renderIcon: function renderIcon(_ref2) {
          var starting = _ref2.starting,
              waiting = _ref2.waiting,
              error = _ref2.error;
          var icon;

          if (starting) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "home"
            });
          } else if (waiting) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "user"
            });
          } else if (error) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "star"
            });
          }

          return icon;
        }
      }), /*#__PURE__*/React.createElement(Step, {
        key: 2,
        title: "Wait",
        description: "This is description",
        status: "wait",
        renderIcon: function renderIcon(_ref3) {
          var starting = _ref3.starting,
              waiting = _ref3.waiting,
              error = _ref3.error;
          var icon;

          if (starting) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "home"
            });
          } else if (waiting) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "user"
            });
          } else if (error) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "star"
            });
          }

          return icon;
        }
      }), /*#__PURE__*/React.createElement(Step, {
        key: 3,
        title: "Wait",
        description: "This is description",
        status: "error",
        renderIcon: function renderIcon(_ref4) {
          var starting = _ref4.starting,
              waiting = _ref4.waiting,
              error = _ref4.error;
          var icon;

          if (starting) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "home"
            });
          } else if (waiting) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "user"
            });
          } else if (error) {
            icon = /*#__PURE__*/React.createElement(Icon, {
              name: "star"
            });
          }

          return icon;
        }
      })))));
    }
  }]);

  return BasicTimelineExample;
}(React.Component);

export { BasicTimelineExample as default };