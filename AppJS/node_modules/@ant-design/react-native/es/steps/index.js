import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';
import { View } from 'react-native';
import { WithTheme } from '../style';
import StepsItem from './StepsItem';
import StepsStyles from './style/index';

var Steps = /*#__PURE__*/function (_React$Component) {
  _inherits(Steps, _React$Component);

  var _super = _createSuper(Steps);

  function Steps(props) {
    var _this;

    _classCallCheck(this, Steps);

    _this = _super.call(this, props);

    _this.onLayout = function (e) {
      _this.setState({
        wrapWidth: e.nativeEvent.layout.width
      });
    };

    _this.state = {
      wrapWidth: 0
    };
    return _this;
  }

  _createClass(Steps, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var children = this.props.children;
      var direction = this.props.direction === 'horizontal' ? 'row' : 'column';
      return /*#__PURE__*/React.createElement(WithTheme, {
        styles: this.props.styles,
        themeStyles: StepsStyles
      }, function (styles) {
        return /*#__PURE__*/React.createElement(View, {
          style: {
            flexDirection: direction
          },
          onLayout: function onLayout(e) {
            _this2.onLayout(e);
          }
        }, React.Children.map(children, function (ele, idx) {
          var errorTail = -1;

          if (idx < children.length - 1) {
            var status = children[idx + 1].props.status;

            if (status === 'error') {
              errorTail = idx;
            }
          }

          return /*#__PURE__*/React.cloneElement(ele, {
            index: idx,
            last: idx === children.length - 1,
            direction: _this2.props.direction,
            current: _this2.props.current,
            width: 1 / (children.length - 1) * _this2.state.wrapWidth,
            size: _this2.props.size,
            finishIcon: _this2.props.finishIcon,
            errorTail: errorTail,
            styles: styles
          });
        }));
      });
    }
  }]);

  return Steps;
}(React.Component);

export { Steps as default };
Steps.defaultProps = {
  direction: ''
};
Steps.Step = StepsItem;